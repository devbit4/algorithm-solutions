const fs = require("fs")
let input = fs.readFileSync("index.txt").toString().split("\n")

class Queue {
  constructor() {
    this._arr = []
  }
  enqueue(item) {
    this._arr.push(item)
  }
  dequeue() {
    return this._arr.shift()
  }
  getLength() {
    return this._arr.length
  }
}


let testCaseCnt=Number(input.shift())

for(let i=0;i<testCaseCnt;i++){

  let n = Number(input[0])
  let visited = Array.from(new Array(n), () => new Array(n).fill(0))
  
  let start = input[1].split(" ").map(Number)
  let end = input[2].split(" ").map(Number)

  function bfs() {
    const queue = new Queue()
    queue.enqueue(start)

    while (queue.getLength() != 0) {
      const [x, y] = queue.dequeue()

      if (x == end[0] && y == end[1]) {
        return visited[x][y]
      }

      let dx = [-2,-2,-1,-1,1,1,2,2];
      let dy = [-1,1,-2,2,-2,2,-1,1];

      for (let i = 0; i < 8; i++) {
        let nx = x + dx[i];
        let ny = y + dy[i];

      if (nx < 0 || ny < 0 || nx >= n || ny >= n) {
        continue
      }
        
      if (visited[nx][ny] == 0) {
        visited[nx][ny] = visited[x][y] + 1
        queue.enqueue([nx, ny])
      }
    }

  }
}
console.log(bfs())
  
input=input.slice(3)
}


