const fs = require("fs")
let input = fs.readFileSync("index.txt").toString().split("\n")

let [n, m] = input.shift().split(" ").map(Number)

let graph = [];
let temp = [];

for (let i = 0; i < n; i++) {
  graph.push(input[i].split(" ").map(Number))
  temp.push(Array(m).fill(0))
}

function virus(x,y){

  let dx=[-1,1,0,0];
  let dy=[0,0,-1,1];

  for(let i=0;i<4;i++){

    let nx=x+dx[i];
    let ny=y+dy[i];

    if(nx<0||ny<0||nx>=n||ny>=m){
      continue
    }
   
    if(temp[nx][ny]==0){
      temp[nx][ny]=2
      virus(nx,ny)
    }     
  }

}



let answer=0;

function getScore(temp){
let sum=0
  
  for(let i=0;i<n;i++){
    for(let j=0;j<m;j++){
      if(temp[i][j]===0){
        sum++
      }
      
    }
    
  }

  return sum
}



function dfs(depth) {

  if (depth === 3) {
    // 벽을 3개 선택한 결과고 
    // 요것이 이제 temp 아직 바이러스 출몰 안했음....
    for(let i=0;i<n;i++){
      for(let j=0;j<m;j++){
         temp[i][j]=graph[i][j] 
      }
    }

    // 바이러스 뿌렸음
    for(let i=0;i<n;i++){
      for(let j=0;j<m;j++){
        if(temp[i][j]===2){
          virus(i,j)
        }
      }
    }


    answer=Math.max(answer,getScore(temp))

    return

  }
  for (let i = 0; i < n; i++) {
    for (let j = 0; j < m; j++) {
      if (graph[i][j] == 0) {
        graph[i][j] = 1;
        dfs(depth + 1);
        graph[i][j] = 0
      }
    }
  }
}

dfs(0)

console.log(answer)
